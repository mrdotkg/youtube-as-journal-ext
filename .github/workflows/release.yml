name: Build and Release Extension

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for release notes
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci || npm install
        
      - name: Clean previous builds
        run: rm -rf dist/ *.zip
        
      - name: Build extension
        run: |
          mkdir -p dist
          zip -r "dist/youtube-blog-readers-${{ github.ref_name }}.zip" . \
            -x 'node_modules/*' '*.git*' 'dist/*' '*.md' 'LAUNCH_CHECKLIST.md' 'package*.json' '.github/*' '*.zip'
            
      - name: Generate Release Notes
        id: release_notes
        run: |
          echo "## ðŸš€ YouTube for Blog Readers ${{ github.ref_name }}" > release_notes.md
          echo "" >> release_notes.md
          echo "### ðŸ“‹ Changes in this release:" >> release_notes.md
          
          # Get previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -n "$PREV_TAG" ]; then
            echo "Changes since $PREV_TAG:" >> release_notes.md
            git log --oneline --pretty=format:"- %s" $PREV_TAG..HEAD >> release_notes.md
          else
            echo "- Initial release of YouTube for Blog Readers extension" >> release_notes.md
            echo "- Hide video thumbnails across all YouTube pages" >> release_notes.md
            echo "- Hide channel avatars for cleaner interface" >> release_notes.md  
            echo "- Show video durations prominently beside titles" >> release_notes.md
            echo "- Show full video titles without truncation" >> release_notes.md
            echo "- Configurable page-specific settings" >> release_notes.md
            echo "- Automatic detection of new videos when scrolling" >> release_notes.md
          fi
          
          echo "" >> release_notes.md
          echo "### ðŸ“¥ Installation:" >> release_notes.md
          echo "1. Download the \`youtube-blog-readers-${{ github.ref_name }}.zip\` file below" >> release_notes.md
          echo "2. Extract the zip file" >> release_notes.md
          echo "3. Open Chrome Extensions (chrome://extensions/)" >> release_notes.md
          echo "4. Enable 'Developer mode'" >> release_notes.md
          echo "5. Click 'Load unpacked' and select the extracted folder" >> release_notes.md
          echo "" >> release_notes.md
          echo "### ðŸŒŸ Features:" >> release_notes.md
          echo "- âœ… Hide video thumbnails for distraction-free browsing" >> release_notes.md
          echo "- âœ… Hide channel avatars for cleaner text-focused interface" >> release_notes.md
          echo "- âœ… Show video durations beside titles" >> release_notes.md
          echo "- âœ… Display full video titles without truncation" >> release_notes.md
          echo "- âœ… Works on all YouTube pages (home, search, channels, playlists)" >> release_notes.md
          echo "- âœ… Automatic scroll detection for newly loaded videos" >> release_notes.md
          echo "- âœ… Customizable settings per page type" >> release_notes.md
          
          # Set multiline output for GitHub Actions
          {
            echo 'RELEASE_NOTES<<EOF'
            cat release_notes.md
            echo EOF
          } >> $GITHUB_OUTPUT
          
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: YouTube for Blog Readers ${{ github.ref_name }}
          body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/youtube-blog-readers-${{ github.ref_name }}.zip
          asset_name: youtube-blog-readers-${{ github.ref_name }}.zip
          asset_content_type: application/zip
